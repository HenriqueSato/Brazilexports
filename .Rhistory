#Tirar produtos que tenham tido valor menos que 5e+05
filter (year_by_year, Value2017 > 5e+05 & Value2018 > 5e+05 & Value2019 > 5e+05 & Value2020 > 5e+05 )
filter (year_by_year, Value2017 > limiar & Value2018 > limiar & Value2019 > limiar & Value2020 > limiar )
filter (year_by_year, Value2017 > limiar & Value2018 > limiar & Value2019 > limiar & Value2020 > limiar )
#Tirar produtos que tenham tido valor menos que um limiar
limiar <- 6e+05
filter (year_by_year, Value2017 > limiar & Value2018 > limiar & Value2019 > limiar & Value2020 > limiar )
#Tirar produtos que tenham tido valor menos que um limiar
limiar <- 7e+05
filter (year_by_year, Value2017 > limiar & Value2018 > limiar & Value2019 > limiar & Value2020 > limiar )
#Tirar produtos que tenham tido valor menos que um limiar
limiar <- 5e+09
filter (year_by_year, Value2017 > limiar & Value2018 > limiar & Value2019 > limiar & Value2020 > limiar )
#Tirar produtos que tenham tido valor menos que um limiar
limiar <- 4e+09
filter (year_by_year, Value2017 > limiar & Value2018 > limiar & Value2019 > limiar & Value2020 > limiar )
#Tirar produtos que tenham tido valor menos que um limiar
limiar <- 3e+09
filter (year_by_year, Value2017 > limiar & Value2018 > limiar & Value2019 > limiar & Value2020 > limiar )
#Tirar produtos que tenham tido valor menos que um limiar
limiar <- 1e+09
filter (year_by_year, Value2017 > limiar & Value2018 > limiar & Value2019 > limiar & Value2020 > limiar )
#Tirar produtos que tenham tido valor menos que um limiar
limiar <- 2e+09
filter (year_by_year, Value2017 > limiar & Value2018 > limiar & Value2019 > limiar & Value2020 > limiar )
#Busquei no Comtrade esses top17 HS4 com dados para 2018 e 2019 para verificar quais estão crescendo
top17_Imp_2018_2019 <- read.csv("mundo_imports_2018-2019_hs(2017)4top17.csv")
#Organizar por HS4 e colocar lado a lado
filter (top17_Imp_2018_2019, Year == 2018) %>%
select (Commodity.Code, Trade.Value..US..) %>%
rename (Import2018 = Trade.Value..US..) -> oportunidades
filter (top17_Imp_2018_2019, Year == 2019) %>%
select (Commodity.Code, Trade.Value..US..) %>%
rename (Import2019 = Trade.Value..US..) %>%
full_join(oportunidades) -> oportunidades
#Incluir coluna de variação
mutate(oportunidades, Variacao = (Import2019 - Import2018)/Import2018)
source("~/.active-rstudio-document", encoding = 'UTF-8')
#Incluir coluna de variação
mutate(oportunidades, Variacao = (Import2019 - Import2018)/Import2018) -> oportunidades
view (oportunidades)
filter (oportunidades, Variacao > 0) -> oportunidades
view (oportunidades)
view (oportunidades)
filter (oportunidades, Variacao > 5e-1) -> oportunidades
view (oportunidades)
ggplot(data = oportunidades, mapping = aes(x = Import2018, y = Variacao)) +
geom_point()
ggplot(data = filter(oportunidades, Variacao < 1e+5), mapping = aes(x = Import2018, y = Variacao)) +
geom_point()
ggplot(data = filter(oportunidades, Variacao < 1), mapping = aes(x = Import2018, y = Variacao)) +
geom_point()
view(oportunidades)
View(top17_Imp_2018_2019)
source("~/_R programacao/Brazilexports/Inicio.R", encoding = 'UTF-8')
source("~/_R programacao/Brazilexports/Inicio.R", encoding = 'UTF-8')
source("~/_R programacao/Brazilexports/Inicio.R", encoding = 'UTF-8')
source("~/_R programacao/Brazilexports/Parte 1 - Oportunidades.R", encoding = 'UTF-8')
source("~/_R programacao/Brazilexports/Parte 1 - Oportunidades.R", encoding = 'UTF-8')
ggplot(data = filter(oportunidades, Variacao < 1), mapping = aes(x = Import2018, y = Variacao)) +
geom_point()
ggplot(data = filter(oportunidades, Variacao < 1), mapping = aes(x = Import2019, y = Variacao)) +
geom_point()
view(oportunidades)
ggplot(data = filter(oportunidades), mapping = aes(x = Import2019, y = Variacao)) +
geom_point()
source("~/_R programacao/Brazilexports/Inicio.R", encoding = 'UTF-8')
filter (year_by_year, Value2017 > limiar & Value2018 > limiar & Value2019 > limiar & Value2020 > limiar )
source("~/_R programacao/Brazilexports/Parte 1 - Oportunidades.R", encoding = 'UTF-8')
top17_BRA_Exp_2019 <- read.csv("exportações brasil top 17por parceiro 2018.csv")
top17_BRA_Exp_2019 <- read.csv("exportações brasil top 17por parceiro 2018.csv")
?join
join_right(oportunidades,top17_BRA_Exp_2019, by = c("Reporter", "Commodity"))
right_join(oportunidades,top17_BRA_Exp_2019, by = c("Reporter", "Commodity"))
view(right_join(oportunidades,top17_BRA_Exp_2019, by = c("Reporter", "Commodity")))
view(left_join(oportunidades,top17_BRA_Exp_2019, by = c("Reporter", "Commodity")))
view(left_join(oportunidades,select(top17_BRA_Exp_2019,Commodity, Reporter, Trade.Value..US..), by = c("Reporter", "Commodity")))
view(left_join(oportunidades, select (top17_BRA_Exp_2019,Commodity, Reporter, Trade.Value..US..), by = c("Reporter", "Commodity")))
source("~/.active-rstudio-document", encoding = 'UTF-8')
view (oportunidades2)
source("~/_R programacao/Brazilexports/Inicio.R", encoding = 'UTF-8')
source("~/_R programacao/Brazilexports/Parte 1 - Oportunidades.R", encoding = 'UTF-8')
source("~/_R programacao/Brazilexports/Parte 2 - participacao BR.R", encoding = 'UTF-8')
top17_BRA_Exp_20182019 %>%
filter (Year == 2019)
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Reporter, Trade.Value..US..) %>%
left_join(oportunidades, by = c("Reporter", "Commodity")) -> oportunidades2
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Reporter, Trade.Value..US..) %>%
right_join(oportunidades, by = c("Reporter", "Commodity")) -> oportunidades2
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Reporter, Trade.Value..US..) %>%
rename (ExportBR2019 = Trade.Value..US..) %>%
right_join(oportunidades, by = c("Reporter", "Commodity")) %>%
mutate (Participacao_BR = Import2019 / ExportBR2019) -> oportunidades2
view (oportunidades2)
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Reporter, Trade.Value..US..)
view(top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Reporter, Trade.Value..US..))
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Partner, Trade.Value..US..) %>%
rename (ExportBR2019 = Trade.Value..US.., Reporter = Partner) %>%
right_join(oportunidades, by = c("Reporter", "Commodity")) %>%
mutate (Participacao_BR = Import2019 / ExportBR2019) -> oportunidades2
filter (oportunidades2, Participacao_BR>0.5)
filter (oportunidades2, Participacao_BR>0.2)
filter (oportunidades2, Participacao_BR>0.1)
filter (oportunidades2, Participacao_BR < 0.1)
filter (oportunidades2, Participacao_BR < 0.2)
filter (oportunidades2, Participacao_BR < 0.4)
filter (oportunidades2, Participacao_BR < 0.5)
filter (oportunidades2, Participacao_BR < 1)
view(oportunidades2)
?mutate_all
?replace
#Calcular a participação brasileira
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Partner, Trade.Value..US..) %>%
rename (ExportBR2019 = Trade.Value..US.., Reporter = Partner) %>%
right_join(oportunidades, by = c("Reporter", "Commodity")) %>%
mutate_at(ExportBR2019, ~replace(., is.na(.), 0))
mutate (Participacao_BR =  ExportBR2019/ Import2019) -> oportunidades2
#Calcular a participação brasileira
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Partner, Trade.Value..US..) %>%
rename (ExportBR2019 = Trade.Value..US.., Reporter = Partner) %>%
right_join(oportunidades, by = c("Reporter", "Commodity")) %>%
mutate_at(ExportBR2019, ~replace(., is.na(.), 0))-> oportunidades2
#Calcular a participação brasileira
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Partner, Trade.Value..US..) %>%
rename (ExportBR2019 = Trade.Value..US.., Reporter = Partner) %>%
right_join(oportunidades, by = c("Reporter", "Commodity")) %>%
mutate_if(is.na(.), 0) -> oportunidades2
#Calcular a participação brasileira
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Partner, Trade.Value..US..) %>%
rename (ExportBR2019 = Trade.Value..US.., Reporter = Partner) %>%
right_join(oportunidades, by = c("Reporter", "Commodity")) %>%
mutate_if(is.na(.), 0) -> oportunidades2
#Calcular a participação brasileira
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Partner, Trade.Value..US..) %>%
rename (ExportBR2019 = Trade.Value..US.., Reporter = Partner) %>%
right_join(oportunidades, by = c("Reporter", "Commodity")) %>%
mutate_if(is.na(), 0) -> oportunidades2
view (oportunidades2)
#Calcular a participação brasileira
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Partner, Trade.Value..US..) %>%
rename (ExportBR2019 = Trade.Value..US.., Reporter = Partner) %>%
right_join(oportunidades, by = c("Reporter", "Commodity")) %>%
mutate_if(is.na, 0) -> oportunidades2
iris <- as_tibble(iris)
# All variants can be passed functions and additional arguments,
# purrr-style. The _at() variants directly support strings. Here
# we'll scale the variables `height` and `mass`:
scale2 <- function(x, na.rm = FALSE) (x - mean(x, na.rm = na.rm)) / sd(x, na.rm)
starwars %>% mutate_at(c("height", "mass"), scale2)
# ->
starwars %>% mutate(across(c("height", "mass"), scale2))
# You can pass additional arguments to the function:
starwars %>% mutate_at(c("height", "mass"), scale2, na.rm = TRUE)
starwars %>% mutate_at(c("height", "mass"), ~scale2(., na.rm = TRUE))
# ->
starwars %>% mutate(across(c("height", "mass"), ~ scale2(.x, na.rm = TRUE)))
# You can also supply selection helpers to _at() functions but you have
# to quote them with vars():
iris %>% mutate_at(vars(matches("Sepal")), log)
iris %>% mutate(across(matches("Sepal"), log))
# The _if() variants apply a predicate function (a function that
# returns TRUE or FALSE) to determine the relevant subset of
# columns. Here we divide all the numeric columns by 100:
starwars %>% mutate_if(is.numeric, scale2, na.rm = TRUE)
starwars %>% mutate(across(where(is.numeric), ~ scale2(.x, na.rm = TRUE)))
# mutate_if() is particularly useful for transforming variables from
# one type to another
iris %>% mutate_if(is.factor, as.character)
iris %>% mutate_if(is.double, as.integer)
# ->
iris %>% mutate(across(where(is.factor), as.character))
iris %>% mutate(across(where(is.double), as.integer))
# Multiple transformations ----------------------------------------
# If you want to apply multiple transformations, pass a list of
# functions. When there are multiple functions, they create new
# variables instead of modifying the variables in place:
iris %>% mutate_if(is.numeric, list(scale2, log))
iris %>% mutate_if(is.numeric, list(~scale2(.), ~log(.)))
iris %>% mutate_if(is.numeric, list(scale = scale2, log = log))
# ->
iris %>%
as_tibble() %>%
mutate(across(where(is.numeric), list(scale = scale2, log = log)))
# When there's only one function in the list, it modifies existing
# variables in place. Give it a name to instead create new variables:
iris %>% mutate_if(is.numeric, list(scale2))
iris %>% mutate_if(is.numeric, list(scale = scale2))
#Calcular a participação brasileira
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Partner, Trade.Value..US..) %>%
rename (ExportBR2019 = Trade.Value..US.., Reporter = Partner) %>%
right_join(oportunidades, by = c("Reporter", "Commodity")) %>%
mutate_at(c(5:10), ~replace(., is.na(.), 0)) -> oportunidades2
#Calcular a participação brasileira
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Partner, Trade.Value..US..) %>%
rename (ExportBR2019 = Trade.Value..US.., Reporter = Partner) %>%
right_join(oportunidades, by = c("Reporter", "Commodity")) %>%
mutate (Participacao_BR =  ExportBR2019/ Import2019) -> oportunidades2
oportunidades2[is.na(oportunidades2)] <- 0
view(oportunidades2)
filter (oportunidades2, Participacao_BR < 0.1)
#substituir os NA por 0
oportunidades2[is.na(oportunidades2)] <- 0
#Descartar participação brasileira maior que x%
filter (oportunidades2, Participacao_BR < 0.1) %>%
#Organizar por potencial
arrange (desc(Potencial))
#Calcular a participação brasileira
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Partner, Trade.Value..US..) %>%
rename (ExportBR2019 = Trade.Value..US.., Reporter = Partner) %>%
right_join(oportunidades, by = c("Reporter", "Commodity")) %>%
mutate (Participacao_BR =  ExportBR2019/ Import2019,
Potencial = Import2019 - Export2019) -> oportunidades2
#Calcular a participação brasileira
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Partner, Trade.Value..US..) %>%
rename (ExportBR2019 = Trade.Value..US.., Reporter = Partner) %>%
right_join(oportunidades, by = c("Reporter", "Commodity")) %>%
mutate (Participacao_BR =  ExportBR2019/ Import2019,
Potencial = Import2019 - Export2019) -> oportunidades2
#Calcular a participação brasileira
top17_BRA_Exp_20182019 %>%
filter (Year == 2019) %>%
select (Commodity, Partner, Trade.Value..US..) %>%
rename (ExportBR2019 = Trade.Value..US.., Reporter = Partner) %>%
right_join(oportunidades, by = c("Reporter", "Commodity")) %>%
mutate (Participacao_BR =  ExportBR2019/ Import2019,
Potencial = Import2019 - ExportBR2019) -> oportunidades2
#substituir os NA por 0
oportunidades2[is.na(oportunidades2)] <- 0
#Descartar participação brasileira maior que x%
filter (oportunidades2, Participacao_BR < 0.1) %>%
#Organizar por potencial
arrange (desc(Potencial))
#Descartar participação brasileira maior que x%
filter (oportunidades2, Participacao_BR < 0.1) %>%
#Organizar por potencial
arrange (desc(Potencial)) -> oportunidades2
view(oportunidades2)
#Script Inicial - Código simples para buscar "oportunidades"
library (tidyverse)
#Importação dos dados do arquivo csv com dados de exportação dos últimos 4 anos completos HS4 do padrão 2017
Exp_2017_2020 <- read.csv("brazil_exports_2017-2020_hs(2017)4.csv")
Exp_2017_2020
typeof(Exp_2017_2020)
class(Exp_2017_2020)
#Importação dos dados do arquivo csv com dados de exportação dos últimos 4 anos completos HS4 do padrão 2017
Exp_2017_2020 <- read_csv("brazil_exports_2017-2020_hs(2017)4.csv")
Exp_2017_2020
#Importação dos dados do arquivo csv com dados de exportação dos últimos 4 anos completos HS4 do padrão 2017
Exp_2017_2020 <- read_csv("brazil_exports_2017-2020_hs(2017)4.csv")
Exp_2017_2020
#Importação dos dados do arquivo csv com dados de exportação dos últimos 4 anos completos HS4 do padrão 2017
Exp_2017_2020 <- read_csv("brazil_exports_2017-2020_hs(2017)4.csv")
#Script Inicial - Código simples para buscar "oportunidades"
library (tidyverse)
#Importação dos dados do arquivo csv com dados de exportação dos últimos 4 anos completos HS4 do padrão 2017
Exp_2017_2020 <- read_csv("brazil_exports_2017-2020_hs(2017)4.csv")
#Importação dos dados do arquivo csv com dados de exportação dos últimos 4 anos completos HS4 do padrão 2017
Exp_2017_2020 <- read_csv("brazil_exports_2017-2020_hs(2017)4.csv")
Exp_2017_2020
Exp_2017_2020
install.packes("janitor")
install.packeges("janitor")
install.packages("janitor")
Exp_2017_2020 %>%
janitor::clean_names()
#Importação dos dados do arquivo csv com dados de exportação dos últimos 4 anos completos HS4 do padrão 2017
Exp_2017_2020 <- read_csv("brazil_exports_2017-2020_hs(2017)4.csv")
#Organizar por HS4 e colocar lado a lado
Exp_2017_2020 %>%
filter(Year == 2017) %>%
select(Commodity, Trade.Value..US..) %>%
rename(Value2017 = Trade.Value..US..) -> year_by_year
#Script Inicial - Código simples para buscar "oportunidades"
library (tidyverse)
#Importação dos dados do arquivo csv com dados de exportação dos últimos 4 anos completos HS4 do padrão 2017
Exp_2017_2020 <- read_csv("brazil_exports_2017-2020_hs(2017)4.csv")
#Organizar por HS4 e colocar lado a lado
Exp_2017_2020 %>%
filter(Year == 2017) %>%
select(Commodity, Trade.Value..US..) %>%
rename(Value2017 = Trade.Value..US..) -> year_by_year
#Importação dos dados do arquivo csv com dados de exportação dos últimos 4 anos completos HS4 do padrão 2017
Exp_2017_2020 <- read.csv("brazil_exports_2017-2020_hs(2017)4.csv")
#Organizar por HS4 e colocar lado a lado
Exp_2017_2020 %>%
filter(Year == 2017) %>%
select(Commodity, Trade.Value..US..) %>%
rename(Value2017 = Trade.Value..US..) -> year_by_year
year_by_year
View(year_by_year)
filter (Exp_2017_2020, Year == 2018) %>%
select (Commodity, Trade.Value..US..) %>%
rename (Value2018 = Trade.Value..US..) %>%
full_join(year_by_year) -> year_by_year
#Organizar por HS4 e colocar lado a lado
Exp_2017_2020 %>%
filter(Year == 2017) %>%
select(Commodity, Trade.Value..US..) %>%
rename(Value2017 = Trade.Value..US..) -> year_by_year
filter (Exp_2017_2020, Year == 2018) %>%
select (Commodity, Trade.Value..US..) %>%
rename (Value2018 = Trade.Value..US..) %>%
full_join(year_by_year) -> year_by_year
filter (Exp_2017_2020, Year == 2019) %>%
select (Commodity, Trade.Value..US..) %>%
rename (Value2019 = Trade.Value..US..) %>%
full_join(year_by_year) -> year_by_year
filter (Exp_2017_2020, Year == 2020) %>%
select (Commodity, Trade.Value..US..) %>%
rename (Value2020 = Trade.Value..US..) %>%
full_join(year_by_year) -> year_by_year
year_by_year
#Como vamos filtrar?
ggplot(data = year_by_year, mapping = aes(x = Value2020, y = Value2017)) +
geom_point(mapping = aes(x = Value2020, y = Value2017), colour= "blue")
year_by_year
1:20
year_by_year %>%
pivot_longer(cols = Value2020:Value2017, names_to = "ano", values_to = "value")
year_by_year %>%
pivot_longer(cols = Value2020:Value2017, names_to = "ano", values_to = "value") %>%
ggplot() +
geom_point(aes(ano, value))
year_by_year %>%
pivot_longer(cols = Value2020:Value2017, names_to = "ano", values_to = "value") %>%
ggplot() +
geom_point(aes(ano, value, color = Commodity), show.legend = F)
year_by_year %>%
pivot_longer(cols = Value2020:Value2017, names_to = "ano", values_to = "value") %>%
ggplot() +
geom_point(aes(ano, value, color = ano), show.legend = F)
year_by_year %>%
pivot_longer(cols = Value2020:Value2017, names_to = "ano", values_to = "value") %>%
ggplot() +
geom_point(aes(ano, value, color = value), show.legend = F)
year_by_year %>%
pivot_longer(cols = Value2020:Value2017, names_to = "ano", values_to = "value") %>%
pivot_wider(names_from = ano, values_from = value)
#Tirar produtos que tenham tido valor de exportação menor que um limiar (exportações consistentes)
limiar <- 2e+09
filter (year_by_year, Value2017 > limiar & Value2018 > limiar & Value2019 > limiar & Value2020 > limiar )
year_by_year %>%
filter(if_any(~ . > limiar))
year_by_year %>%
filter(if_any(.cols = everything(), ~ . > limiar))
year_by_year %>%
filter(if_all(.cols = everything(), ~ . > limiar))
year_by_year %>%
filter(if_any(.cols = everything(), ~ . > limiar))
year_by_year %>%
filter(if_all(.cols = everything(), ~ . > limiar))
#Importação dos dados do arquivo csv com dados de exportação dos últimos 4 anos completos HS4 do padrão 2017
Exp_2017_2020 <- read_csv("brazil_exports_2017-2020_hs(2017)4.csv")
install.packages("here")
here::here()
library(here)
here("data-raw/brazil_exports_2017-2020_hs(2017)4.csv")
#Importação dos dados do arquivo csv com dados de exportação dos últimos 4 anos completos HS4 do padrão 2017
Exp_2017_2020 <- read_csv(here("data-raw/brazil_exports_2017-2020_hs(2017)4.csv"))
#Script Inicial - Código simples para buscar "oportunidades"
library (tidyverse)
#Importação dos dados do arquivo csv com dados de exportação dos últimos 4 anos completos HS4 do padrão 2017
Exp_2017_2020 <- read_csv(here("data-raw/brazil_exports_2017-2020_hs(2017)4.csv"))
fs::dir_ls(here::here("data-raw"))
files <- fs::dir_ls(here::here("data-raw"))
files
files[1]
files[2]
purrr::map_df(files, read_csv)
df <- purrr::map_df(files, read_csv)
df %>%
View()
remotes::install_github("fernandobastosneto/comerciomundo")
install.packages("remotes")
remotes::install_github("fernandobastosneto/comerciomundo")
comerciomundo::comtrade
comerciomundo::dic_partners
comerciomundo::dic_reporters
remotes::install_github("fernandobastosneto/comerciobr")
comerciobr::sh1_df
comerciobr::sh1_df %>%
filter(co_ano == max(co_ano))
comerciobr::sh1_df %>%
filter(co_ano == max(co_ano)) %>%
filter(co_mes == max(co_mes))
comerciobr::sh6_df %>%
filter(path == "EXP") %>%
filter(co_ano > 2016 & co_ano != max(co_ano))
df <- comerciobr::sh6_df %>%
filter(path == "EXP") %>%
filter(co_ano > 2016 & co_ano != max(co_ano))
df
df
df %>%
group_by(co_ano, co_sh6) %>%
summarise(value = sum(value))
df %>%
group_by(co_ano, co_sh6) %>%
summarise(value = sum(value)) %>%
slice_max(value, n = 10)
df %>%
group_by(co_ano, co_sh6) %>%
summarise(value = sum(value)) %>%
slice_max(value, n = 10) %>%
pivot_wider(names_from = co_ano, values_from = value)
df %>%
group_by(co_ano, co_sh6) %>%
summarise(value = sum(value))
df %>%
group_by(co_ano, co_sh6) %>%
summarise(value = sum(value)) %>%
slice_max(value, n = 10) %>%
ungroup()
df %>%
group_by(co_ano, co_sh6) %>%
summarise(value = sum(value)) %>%
slice_max(value, n = 10) %>%
ungroup() %>%
distinct(co_sh6)
df %>%
group_by(co_ano, co_sh6) %>%
summarise(value = sum(value)) %>%
slice_max(value, n = 10) %>%
ungroup() %>%
distinct(co_sh6) %>%
left_join(comerciobr::dic_sh6_sh1)
comerciobr::dic_sh6_sh1
comerciobr::dic_sh6_sh4
df <- comerciobr::sh4_df %>%
filter(path == "EXP") %>%
filter(co_ano > 2016 & co_ano != max(co_ano))
df %>%
group_by(co_ano, co_sh6) %>%
summarise(value = sum(value)) %>%
slice_max(value, n = 10) %>%
ungroup() %>%
distinct(co_sh6) %>%
left_join(comerciobr::dic_sh6_sh4)
df %>%
group_by(co_ano, co_sh4) %>%
summarise(value = sum(value)) %>%
slice_max(value, n = 10) %>%
ungroup() %>%
distinct(co_sh6) %>%
left_join(comerciobr::dic_sh6_sh4)
df %>%
group_by(co_ano, co_sh4) %>%
summarise(value = sum(value)) %>%
slice_max(value, n = 10) %>%
ungroup() %>%
distinct(co_sh6) %>%
left_join(comerciobr::dic_sh6_sh4)
df <- comerciobr::sh4_df %>%
filter(path == "EXP") %>%
filter(co_ano > 2016 & co_ano != max(co_ano))
df
df %>%
group_by(co_ano, co_sh4) %>%
summarise(value = sum(value)) %>%
slice_max(value, n = 10) %>%
ungroup() %>%
distinct(co_sh4) %>%
left_join(comerciobr::dic_sh6_sh4)
df %>%
group_by(co_ano, co_sh4) %>%
summarise(value = sum(value)) %>%
slice_max(value, n = 10) %>%
ungroup() %>%
distinct(co_sh4) %>%
left_join(comerciobr::dic_sh6_sh4) %>%
distinct(no_sh4_por) %>%
pull()
df %>%
group_by(co_ano, co_sh4) %>%
summarise(value = sum(value)) %>%
slice_max(value, n = 10) %>%
ungroup() %>%
distinct(co_sh4) %>%
left_join(comerciobr::dic_sh6_sh4) %>%
distinct(no_sh4_por)
